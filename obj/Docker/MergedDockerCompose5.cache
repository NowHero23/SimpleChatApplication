name: dockercompose734548617172796990
services:
  postgres_db:
    container_name: postgres
    environment:
      POSTGRES_DB: postgres-db
      POSTGRES_PASSWORD: "123"
      POSTGRES_USER: postgres
    image: postgres:15.3-alpine3.18
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
        volume: {}
  presentationlayer:
    build:
      context: C:\Users\Levchenko O\source\repos\SimpleChatApplication
      dockerfile: PresentationLayer/Dockerfile
    depends_on:
      postgres_db:
        condition: service_started
        required: true
      redis:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: presentationlayer
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5000
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Levchenko O\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Levchenko O\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  redis:
    image: redis:alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
networks:
  default:
    name: dockercompose734548617172796990_default
volumes:
  postgres-data:
    name: dockercompose734548617172796990_postgres-data